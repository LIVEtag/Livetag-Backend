<?xml version="1.0"?>
<ruleset name="Yii2">
    <description>Rules for standard PHP projects</description>

    <!-- Security Code Reviews Rules -->
    <!-- Global properties -->
    <!-- Please note that not every sniff uses them and they can be overwritten by rule -->
    <!-- Paranoya mode: Will generate more alerts but will miss less vulnerabilites. Good for assisting manual code review. -->
    <config name="ParanoiaMode" value="0"/>

    <!-- BadFunctions -->
    <!-- PHP functions that can lead to security issues -->
    <rule ref="PHPCS_SecurityAudit.BadFunctions.Asserts"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.Backticks"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.CryptoFunctions"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.EasyRFI"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.EasyXSS">
        <properties>
            <!-- Comment out to follow global ParanoiaMode -->
            <!--<property name="forceParanoia" value="0"/>-->
        </properties>
    </rule>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.ErrorHandling"/>

    <rule ref="PHPCS_SecurityAudit.BadFunctions.FilesystemFunctions">
        <exclude-pattern>*/config/*</exclude-pattern>
        <exclude-pattern>/rest/modules/swagger/controllers/actions/*</exclude-pattern>
        <exclude-pattern>/rest/modules/chat/controllers/DemoController.php</exclude-pattern>
        <exclude-pattern>/rest/generators/*</exclude-pattern>
        <exclude-pattern>/common/components/rbac/data/AccessService.php</exclude-pattern>
    </rule>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.FringeFunctions"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.FunctionHandlingFunctions">
        <exclude-pattern>/rest/modules/swagger/controllers/actions/*</exclude-pattern>
        <exclude-pattern>/rest/modules/chat/controllers/actions/*</exclude-pattern>
        <exclude-pattern>/rest/components/api/AccessRule.php</exclude-pattern>
    </rule>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.Mysqli"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.NoEvals"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.Phpinfos"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.PregReplace">
        <exclude-pattern>/rest/generators/*</exclude-pattern>
    </rule>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.SQLFunctions"/>
    <rule ref="PHPCS_SecurityAudit.BadFunctions.SystemExecFunctions"/>

    <!-- CVE -->
    <!-- Entries from CVE database from vendor PHP and bugs.php.net -->
    <rule ref="PHPCS_SecurityAudit.CVE.20132110"/>
    <rule ref="PHPCS_SecurityAudit.CVE.20134113"/>

    <!-- Misc -->
    <rule ref="PHPCS_SecurityAudit.Misc.BadCorsHeader"/>
    <rule ref="PHPCS_SecurityAudit.Misc.IncludeMismatch">
        <exclude-pattern>/common/components/rbac/data/AccessService.php</exclude-pattern>
        <exclude-pattern>/rest/common/controllers/actions/Config/IndexAction.php</exclude-pattern>
    </rule>
</ruleset>

