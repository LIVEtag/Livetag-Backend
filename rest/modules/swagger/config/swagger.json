{
    "swagger": "2.0",
    "info": {
        "description": "API for mobile && js applications.",
        "version": "1.0.0",
        "title": "GBKSOFT Test API"
    },
    "basePath": "/rest",
    "tags": [        
        {
            "name": "Channel",
            "description": "Chat module"
        }
    ],
    "schemes": ["http", "https"],
    "paths": {
        "/v1/user/login/twitter": {
            "post": {
                "summary": "Create access token for APP using twitter account",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessTokenUsingTwitterAccount",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "token",
                        "description": "Access token",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "tokenSecret",
                        "description": "Access token secret",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/login/{type}": {
            "post": {
                "summary": "Create access token for APP using social account",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessTokenUsingSocialAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "type": "string",
                        "enum": [
                            "facebook",
                            "linkedin",
                            "google"
                        ],
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "token",
                        "type": "string",
                        "required": true,
                        "description": "Get token facebook example: https://www.facebook.com/dialog/oauth?client_id={client_id}&response_type=token&redirect_uri={redirect_uri}&scope={scope}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "summary": "Create access token for APP",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessToken",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Username / e-mail<br>Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/login/email": {
            "post": {
                "summary": "Create access token for APP by email",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessTokenByEmail",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/loginEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/register": {
            "post": {
                "summary": "Create user for APP",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreate",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "isRememberMe",
                        "type": "string",
                        "enum": ["yes", "no"],
                        "default": "no",
                        "required": false,
                        "description": "are you need remember this token?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/current": {
            "get": {
                "summary": "Current user for APP",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userCurrent",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            }
        },
        "/v1/user/logout": {
            "post": {
                "summary": "Logout current user",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userLogout",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status204"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            }
        },
        "/v1/pages": {
            "get": {
                "summary": "Static pages list",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "pagesIndex",
                "parameters": [
                    {
                        "in": "path",
                        "name": "fields",
                        "description": "Fields list in response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "sort",
                        "description": "Sort ordering. You can use order=[-]sort_order as paremeter in Url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/staticPage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            }
        },
        "/v1/pages/{slug}": {
            "get": {
                "summary": "Static page view",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "pagesView",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/staticPage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            }
        },
        "/v1/user/change-password": {
            "patch": {
                "summary": "Change User Password",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userChangePassword",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/changePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/recovery-password": {
            "post": {
                "summary": "Recovery user password by email",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userRecoveryPasswordByEmail",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recoveryPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/new-password": {
            "post": {
                "summary": "Recovery user password by email",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userRecoveryPasswordChange",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recoveryPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/channel/sign": {           
            "post": {
                "summary": "Sign in channel (get user token and additional channel config)",
                "description": "This method also required by centrifugo for connection check",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelSign",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }                    
                }
            }
        },
        "/v1/channel/auth": {           
            "post": {
                "summary": "Check access for private channel",
                "description": "This method required by centrifugo for private channel access",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelAuth",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }                    
                }
            }
        },
        "/v1/channel": {
            "get": {
                "summary": "Get Avaliable channels list",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelIndex",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields list in response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "sort",
                        "description": "Sort ordering. You can use order=[-]sort_order as paremeter in Url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "description": " additional fields to return (comma separated) [inside,users,messages]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/channel"
                                            }
                                        } 
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new channel",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelCreate",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": true
                    },                    
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "integer",
                        "enum": [1, 2],
                        "default": "1",
                        "required": true,
                        "description": "Type of channel [1-public, 2-private]"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status201"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channel"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/channel/{id}": {
            "get": {
                "summary": "Get channel info",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelView",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields list in response",
                        "required": false,
                        "type": "string"
                    },                    
                    {
                        "in": "query",
                        "name": "expand",
                        "description": " additional fields to return (comma separated) [inside,users,messages]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channel"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update channel",
                "description": "Action avaliable for channel admin",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelUpdate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channel"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove channel",
                "description": "Action avaliable for channel admin",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelRemove",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    }                        
                ],
                "responses": {
                    "204": {
                        "description": "No Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status204"
                                }                               
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    }
                }
            }
        },
        "/v1/channel/{id}/join": {           
            "put": {
                "summary": "Join channel",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelJoin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    }                   
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channel"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/channel/{id}/leave": {           
            "put": {
                "summary": "Leave channel",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelLeave",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    }                   
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channel"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/channel/{id}/message": {           
            "get": {
                "summary": "Get channel messages",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelGetMessages",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/channelMessage"
                                            }
                                        } 
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create message in channel",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelCreateMessage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "formData",
                        "name": "message",
                        "type": "string",
                        "required": true
                    }                      
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/channelMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/channel/{id}/user": {           
            "get": {
                "summary": "Get channel users",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelGetUsers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/channelUser"
                                            }
                                        } 
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    }
                }
            }            
        },
        "/v1/channel/{id}/user/{userId}": {           
            "post": {
                "summary": "Add user to channel",
                "description": "Action avaliable for channel admin",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelAddUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User id",
                        "required": true,
                        "type": "integer"
                    }                   
                ],
                "responses": {
                    "204": {
                        "description": "No Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status204"
                                }                               
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove user from channel",
                "description": "Action avaliable for channel admin",
                "tags": ["Channel"],
                "produces": ["application/json"],
                "operationId": "channelRemoveUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Channel id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User id",
                        "required": true,
                        "type": "integer"
                    }                          
                ],
                "responses": {
                    "204": {
                        "description": "No Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status204"
                                }                               
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status403"
                        }
                    }
                }
            }
        }
    },
    "definitions": {

        "responseModel": {
            "type": "object",
            "required": [
                "code",
                "status",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "object"
                }
            }
        },
        "validateError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "user_id"
                },
                "message": {
                    "type": "string",
                    "example": "User ID must be an integer."
                }
            }
        },
        "status200": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "200 OK",
                    "properties": {
                        "code": {
                            "example": "200"
                        },
                        "status": {
                            "example": "success"
                        }
                    }
                }
            ]
        },
        "status201": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "201 Created",
                    "properties": {
                        "code": {
                            "example": "201"
                        },
                        "status": {
                            "example": "success"
                        },
                        "message": {
                            "example": "Created"
                        }
                    }
                }
            ]
        },
        "status204": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "204 No Content",
                    "properties": {
                        "code": {
                            "example": "204"
                        },
                        "status": {
                            "example": "success"
                        }
                    }
                }
            ]
        },
        "status400": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "400 Bad Request",
                    "properties": {
                        "code": {
                            "example": "400"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Bad Request"
                        }
                    }
                }
            ]
        },
        "status401": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "401 Unauthorized",
                    "properties": {
                        "code": {
                            "example": "401"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Unauthorized"
                        }
                    }
                }
            ]
        },
        "status404": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "401 Not Found",
                    "properties": {
                        "code": {
                            "example": "404"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Not Found"
                        }
                    }
                }
            ]
        },
        "status422": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "422 Unprocessable Entity",
                    "properties": {
                        "code": {
                            "example": "422"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Unprocessable Entity"
                        },
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validateError"
                            }
                        }
                    }
                }
            ]
        },
        "status500": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "500 Internal Server Error",
                    "properties": {
                        "code": {
                            "example": "500"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Internal Server Error"
                        }
                    }
                }
            ]
        },
        "status503": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "503 Service Unavailable",
                    "properties": {
                        "code": {
                            "example": "503"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Service Unavailable"
                        }
                    }
                }
            ]
        },
        "user": {
            "type": "object",
            "required": [
                "username",
                "email",
                "accessToken"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "accessToken": {
                    "$ref": "#/definitions/token"
                }
            }
        },
        "token": {
            "type": "object",
            "required": [
                "token",
                "expired_at"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "staticPage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "loginEmail": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "required": true,
                    "description": "Email"
                },
                "password": {
                    "type": "string",
                    "required": true,
                    "description": "Minimum 2, maximum 255 characters"
                }
            }
        },
        "changePassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "required": true
                },
                "newPassword": {
                    "type": "string",
                    "required": true
                },
                "confirmPassword": {
                    "type": "string",
                    "required": true
                }
            }
        },
        "recoveryPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "required": true,
                    "description": "Email"
                }
            }
        },
        "recoveryPassword": {
            "type": "object",
            "properties": {
                "resetToken": {
                    "type": "string",
                    "required": true,
                    "description": "Password reset token"
                },
                "password": {
                    "type": "string",
                    "required": true,
                    "description": "Minimum 2, maximum 255 characters"
                },
                "confirmPassword": {
                    "type": "string",
                    "required": true,
                    "description": "Minimum 2, maximum 255 characters"
                }
            }
        },
        "channel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                }
            }
        },
        "miniChannelUser": {
            "type": "object",
            "title": "User identity model for channel (minified format)",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "channelMessage": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/miniChannelUser"
                },
                "message": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }                
            }
        },
        "channelUser": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                },
                "role": {
                    "type": "integer"
                }                
            }
        }
    }
}
