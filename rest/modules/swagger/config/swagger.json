{
    "openapi": "3.0.0",
    "info": {
        "description": "API for mobile && js applications.",
        "version": "1.0.0",
        "title": "Livetag API"
    },
    "security": [
        {
            "Basic": []
        },
        {
            "Bearer": []
        }
    ],
    "servers": [
        {
            "url": "/rest"
        }
    ],
    "tags": [
        {
            "name": "AnyBody",
            "description": "Actions available without authentication"
        },
        {
            "name": "Seller",
            "description": "Actions Available for `Seller` Role"
        },
        {
            "name": "Buyer",
            "description": "Actions Available for `Buyer` Role"
        },
        {
            "name": "Account",
            "description": "User authentication, manage and details, email confirmation and authentication"
        },
        {
            "name": "Vonage",
            "description": "Vonage sessions manage"
        },
        {
            "name": "Centrifugo",
            "description": "Centrifugo related methods"
        },
        {
            "name": "Product",
            "description": "Product related methods"
        }
    ],
    "paths": {
        "/v1/user/login": {
            "post": {
                "security": [],
                "summary": "Create access token for APP",
                "tags": [
                    "AnyBody",
                    "Account"
                ],
                "operationId": "userCreateAccessToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "seller1@nosend.net",
                                        "description": "E-mail Minimum 2, maximum 255 characters"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password_0",
                                        "description": "Minimum 2, maximum 255 characters"
                                    },
                                    "rememberMe": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Remember for 30 days (default true)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status201"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/token"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/user/current": {
            "get": {
                "summary": "Current user for APP",
                "tags": [
                    "Account",
                    "Seller",
                    "Buyer"
                ],
                "operationId": "userCurrent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/v1/user/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Logout current user",
                "tags": [
                    "Account",
                    "Seller"
                ],
                "operationId": "userLogout",
                "responses": {
                    "204": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status204"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/v1/config": {
            "get": {
                "security": [],
                "summary": "Rest application config",
                "tags": [
                    "AnyBody"
                ],
                "operationId": "configIndex",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/config"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/validate-password-token/{token}": {
            "get": {
                "security": [],
                "summary": "Validate Password Token",
                "tags": [
                    "Account"
                ],
                "operationId": "userValidatePasswordToken",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/user/change-password": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Change User Password",
                "tags": [
                    "Account",
                    "Seller"
                ],
                "operationId": "userChangePassword",
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePassword"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/recovery-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "Account",
                    "AnyBody"
                ],
                "operationId": "userRecoveryPasswordByEmail",
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPasswordRequest"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/new-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "Account",
                    "AnyBody"
                ],
                "operationId": "userRecoveryPasswordChange",
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPassword"
                            }
                        }
                    }
                }
            }
        },

        "/v1/stream-session": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vonage",
                    "Seller"
                ],
                "summary": "Create new Session for Stream",
                "operationId": "streamSessionCreate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSession"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vonage",
                    "Seller"
                ],
                "summary": "Stop Stream Session",
                "operationId": "stopStreamSession",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/{shopUri}/stream-session": {
            "get": {
                "tags": [
                    "Vonage",
                    "Seller",
                    "Buyer"
                ],
                "summary": "View Active Stream Session for selected shop",
                "operationId": "streamSessionView",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "Shop Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSession"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },

        "/v1/centrifugo/sign": {
            "post": {
                "summary": "Sign in centrifugo",
                "description": "This method required by centrifugo for connection check",
                "tags": [
                    "Centrifugo",
                    "Seller",
                    "Buyer"
                ],
                "operationId": "centrifugoSign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "properties": {
                                                        "token": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/v1/{shopUri}/product": {
            "get": {
                "summary": "Get products by shop uri",
                "tags": [
                    "Product"
                ],
                "operationId": "getProductsByShop",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "shop Uri",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],

                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/product"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status401"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Basic": {
                "description": "Use uuid as username and ANY password(empty is ok, but swagger does not support empty passwords) for Buyer role",
                "type": "http",
                "scheme": "basic"
            },
            "Bearer": {
                "description": "Access token for Seller and Admin roles",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": ""
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status400"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status401"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status403"
                        }
                    }
                }
            },
            "404": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status404"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status422"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status500"
                        }
                    }
                }
            },
            "503": {
                "description": "Service Unavailable",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status503"
                        }
                    }
                }
            }
        },
        "schemas": {
            "responseModel": {
                "type": "object",
                "required": [
                    "code",
                    "status",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object"
                    }
                }
            },
            "validateError": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "example": "userId"
                    },
                    "message": {
                        "type": "string",
                        "example": "User ID must be an integer."
                    }
                }
            },
            "status200": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "200 OK",
                        "properties": {
                            "code": {
                                "example": "200"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status200DataProvider": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/status200"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_meta": {
                                "type": "object",
                                "properties": {
                                    "pagination": {
                                        "type": "object",
                                        "properties": {
                                            "totalCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "pageCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "currentPage": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "perPage": {
                                                "type": "integer",
                                                "example": 20
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "status201": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "201 Created",
                        "properties": {
                            "code": {
                                "example": "201"
                            },
                            "status": {
                                "example": "success"
                            },
                            "message": {
                                "example": "Created"
                            }
                        }
                    }
                ]
            },
            "status204": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "204 No Content",
                        "properties": {
                            "code": {
                                "example": "204"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status400": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "400 Bad Request",
                        "properties": {
                            "code": {
                                "example": "400"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Bad Request"
                            }
                        }
                    }
                ]
            },
            "status401": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "401 Unauthorized",
                        "properties": {
                            "code": {
                                "example": "401"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unauthorized"
                            }
                        }
                    }
                ]
            },
            "status403": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "403 Forbidden",
                        "properties": {
                            "code": {
                                "example": "403"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Forbidden"
                            }
                        }
                    }
                ]
            },
            "status404": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "401 Not Found",
                        "properties": {
                            "code": {
                                "example": "404"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Not Found"
                            }
                        }
                    }
                ]
            },
            "status422": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "422 Unprocessable Entity",
                        "properties": {
                            "code": {
                                "example": "422"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unprocessable Entity"
                            },
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/validateError"
                                }
                            }
                        }
                    }
                ]
            },
            "status500": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "500 Internal Server Error",
                        "properties": {
                            "code": {
                                "example": "500"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Internal Server Error"
                            }
                        }
                    }
                ]
            },
            "status503": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "503 Service Unavailable",
                        "properties": {
                            "code": {
                                "example": "503"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Service Unavailable"
                            }
                        }
                    }
                ]
            },

            "user": {
                "type": "object",
                "required": [
                    "role",
                    "name"
                ],
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "seller",
                            "buyer"
                        ],
                        "example": "seller"
                    },
                    "name": {
                        "type": "Jon Snow"
                    },
                    "shop": {
                        "type": "object",
                        "description": "EXPAND",
                        "$ref": "#/components/schemas/shop"
                    }
                }
            },
            "token": {
                "type": "object",
                "required": [
                    "token",
                    "expiredAt"
                ],
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "config": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "object",
                        "properties": {
                            "major": {
                                "type": "integer"
                            },
                            "minor": {
                                "type": "integer"
                            },
                            "patch": {
                                "type": "integer"
                            },
                            "commit": {
                                "type": "string"
                            }
                        }
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {}
                    },
                    "errors": {
                        "type": "object",
                        "properties": {}
                    }
                }
            },
            "changePassword": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "recoveryPasswordRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email"
                    }
                }
            },
            "recoveryPassword": {
                "type": "object",
                "properties": {
                    "resetToken": {
                        "type": "string",
                        "description": "Password reset token"
                    },
                    "password": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    }
                }
            },
            "shop": {
                "type": "object",
                "required": [
                    "uri",
                    "name",
                    "website"
                ],
                "properties": {
                    "uri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    }
                }
            },
            "streamSession": {
                "type": "object",
                "required": [
                    "id",
                    "shopUri",
                    "sessionId",
                    "isActive",
                    "token",
                    "createdAt",
                    "expiredAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "shopUri": {
                        "type": "string",
                        "example": "shop1"
                    },
                    "sessionId": {
                        "type": "string",
                        "example": "1_MX40NTc0ODE1Mn5-MTQ4NjEzNjg3NTg4OX5BVVBhZmZCK3E5ZTdzdmlZbVpvR041V32-QX4"
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "token": {
                        "type": "string",
                        "description": "EXPAND",
                        "example": "T1==cGFydG5lcl9pZD00NTc0ODE1MiZzaWc9NDI2NTY1NmNiZmM4MjBmMTY2ZDQ0OWY4MDcwOTQwYTcwN2Q1MmJiMjpzZXNzaW9uX2lkPTFfTVg0ME5UYzBPREUxTW41LU1UUTROakV6TmpnM05UZzRPWDVCVlZCaFptWkNLM0U1WlRkemRtbFpiVnB2UjA0MVYzWi1RWDQmY3JlYXRlX3RpbWU9MTQ4NjEzNjg2NSZyb2xlPXB1Ymxpc2hlciZub25jZT0xNDg2MTM2ODY1LjE5ODI2MDkxMTcyNDUmZXhwaXJlX3RpbWU9MTQ4NjIyMzI2NQ=="
                    },
                    "createdAt": {
                        "type": "integer",
                        "example": 1619816400
                    },
                    "expiredAt": {
                        "type": "integer",
                        "example": 1619827200
                    }
                }
            },
            "product": {
                "type": "object",
                "required": [
                    "id",
                    "externalId",
                    "title",
                    "photo",
                    "link",
                    "status",
                    "options"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "externalId" : {
                        "type": "string",
                        "example": "fb7e2008-50e4-3735-a320-ccc3399d7da5"
                    },
                    "title" : {
                        "type": "string",
                        "example": "In quas molestiae."
                    },
                    "photo" : {
                        "type": "string",
                        "example": "https://lorempixel.com/640/480/?71071"
                    },
                    "link" : {
                        "type": "string",
                        "example": "http://bernier.org/"
                    },
                    "status" : {
                        "type": "integer",
                        "enum": [ 1, 2, 3],
                        "example": 2
                    },
                    "options" : {
                        "type": "array",
                        "example": {
                            "size": "M",
                            "color": "MediumOrchid",
                            "price": 178.13
                        }
                    }
                }
            }
        },
        "parameters": {
            "page": {
                "in": "query",
                "name": "page",
                "description": "The number of page.",
                "required": false,
                "example": 1,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                }
            },
            "perPage": {
                "in": "query",
                "name": "perPage",
                "description": "The number of items returned per page",
                "required": false,
                "example": 20,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 20
                }
            },
            "fields": {
                "in": "query",
                "name": "fields",
                "description": "Fields (coma separated)",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-streamSession": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```token```",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-user": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```shop```",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}