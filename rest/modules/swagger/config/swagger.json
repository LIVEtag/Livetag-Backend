{
    "openapi": "3.0.0",
    "info": {
        "description": "API for mobile && js applications.",
        "version": "1.0.0",
        "title": "Livetag API"
    },
    "security": [
        {
            "Basic": []
        },
        {
            "Bearer": []
        }
    ],
    "servers": [
        {
            "url": "/rest"
        }
    ],
    "tags": [
        {
            "name": "AnyBody",
            "description": "Actions available without authentication"
        },
        {
            "name": "Seller",
            "description": "Actions Available for `Seller` Role"
        },
        {
            "name": "Buyer",
            "description": "Actions Available for `Buyer` Role"
        },
        {
            "name": "Centrifugo",
            "description": "Centrifugo related methods"
        },
        {
            "name": "Account",
            "description": "User authentication, manage and details, email confirmation and authentication"
        },
        {
            "name": "Shop",
            "description": "Shop related methods"
        },
        {
            "name": "Stream Session",
            "description": "Stream sessions manage"
        },
        {
            "name": "Product",
            "description": "Operations with Products"
        },
        {
            "name": "Comments",
            "description": "Stream Comments"
        },
        {
            "name": "Archives",
            "description": "Manage Archives in Stream Session"
        }
    ],
    "paths": {
        "/v1/user/login": {
            "post": {
                "security": [],
                "summary": "Create access token for APP",
                "tags": [
                    "AnyBody",
                    "Account"
                ],
                "operationId": "userCreateAccessToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "seller1@nosend.net",
                                        "description": "E-mail Minimum 2, maximum 255 characters"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password_0",
                                        "description": "Minimum 2, maximum 255 characters"
                                    },
                                    "rememberMe": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Remember for 30 days (default true)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status201"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/token"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/user/current": {
            "get": {
                "summary": "Current user for APP",
                "tags": [
                    "Account",
                    "Seller",
                    "Buyer"
                ],
                "operationId": "userCurrent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "patch": {
                "summary": "Update User Profile",
                "tags": [
                    "Account",
                    "Seller",
                    "Buyer"
                ],
                "operationId": "updateUserProfile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jon Snow"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/user/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Logout current user",
                "tags": [
                    "Account",
                    "Seller"
                ],
                "operationId": "userLogout",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/v1/config": {
            "get": {
                "security": [],
                "summary": "Rest application config",
                "tags": [
                    "AnyBody"
                ],
                "operationId": "configIndex",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/config"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/validate-password-token/{token}": {
            "get": {
                "security": [],
                "summary": "Validate Password Token",
                "tags": [
                    "Account"
                ],
                "operationId": "userValidatePasswordToken",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/user/change-password": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Change User Password",
                "tags": [
                    "Account",
                    "Seller"
                ],
                "operationId": "userChangePassword",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePassword"
                            }
                        }
                    }
                }
            }
        },

        "/v1/user/recovery-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "Account",
                    "AnyBody"
                ],
                "operationId": "userRecoveryPasswordByEmail",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPasswordRequest"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/new-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "Account",
                    "AnyBody"
                ],
                "operationId": "userRecoveryPasswordChange",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPassword"
                            }
                        }
                    }
                }
            }
        },

        "/v1/shop/{shopUri}/stream-session/current": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Seller",
                    "Buyer"
                ],
                "summary": "View Active Stream Session for selected shop",
                "operationId": "currentStreamSessionToken",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "Shop Uri",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSession"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/shop/{shopUri}/stream-session": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Seller",
                    "Buyer"
                ],
                "summary": "List of Stream Sessions for selected shop",
                "operationId": "streamSessionIndex",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "Shop Uri",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Filter by Stream Session status. Supported formats: comma-separated string. \n Possible statuses: \n* `1` -  New.\n* `2` -  Active.\n* `3` -  Stopped.\n* `4` -  Archived.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "announcedAtFrom",
                        "description": "Filter by Announced At From, timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "announcedAtTo",
                        "description": "Filter by Announced At To, timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Sort ordering: use order=[-]sortOrder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "announcedAt",
                                "-announcedAt",
                                "startedAt",
                                "-startedAt"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/perPage"
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/streamSession"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/stream-session": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Stream Session",
                    "Seller"
                ],
                "summary": "Create new Session for Stream",
                "operationId": "streamSessionCreate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSession"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/stream-session/{streamSessionid}": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Seller",
                    "Buyer"
                ],
                "summary": "View Stream Session by id",
                "operationId": "streamSessionView",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSession"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Stream Session",
                    "Seller"
                ],
                "summary": "Start selected Stream Session (Create Token)",
                "operationId": "streamSessionStart",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSession"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rotate": {
                                        "type": "integer",
                                        "example": 90,
                                        "description": "Rotation value that should be 90 degrees by default."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSessionToken"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Stream Session",
                    "Seller"
                ],
                "summary": "Stop selected Stream Session",
                "operationId": "streamSessionStop",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/stream-session/{streamSessionid}/token": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Seller",
                    "Buyer"
                ],
                "summary": "Get token for selected Stream Session",
                "operationId": "streamSessionToken",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSessionToken"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/stream-session/{streamSessionid}/product": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Product",
                    "Seller",
                    "Buyer"
                ],
                "summary": "Get products of selected Stream Session",
                "operationId": "streamSessionProducts",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "description": "Filter by Stream Session Product status \n* `2` - Displayed in the widget.\n* `3` -  Presented now.",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "productId",
                        "description": "Filter by Product Ids. Supported formats: \n* array \n* comma-separated string",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Sort ordering: use order=[-]sortOrder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "productId",
                                "-productId",
                                "productTitle",
                                "-productTitle"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/perPage"
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-streamSessionProduct"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200DataProvider"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/streamSessionProduct"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/stream-session/{streamSessionid}/archive/snapshot": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Archives",
                    "Seller",
                    "Buyer"
                ],
                "summary": "Get snapshots of selected archive Stream Session",
                "operationId": "streamSessionArchiveSnapshots",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/streamSessionSnapshot"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },


        "/v1/stream-session/{streamSessionid}/archive/product": {
            "get": {
                "tags": [
                    "Stream Session",
                    "Archives",
                    "Seller",
                    "Buyer"
                ],
                "summary": "Get products of selected archive Stream Session",
                "operationId": "streamSessionArchiveProducts",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/perPage"
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200DataProvider"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/product"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/stream-session/{streamSessionid}/product/{productId}/event": {
            "post": {
                "security": [
                    {
                        "Basic": []
                    }
                ],
                "tags": [
                    "Stream Session",
                    "Product",
                    "Buyer"
                ],
                "summary": "Events with Stream Session Products",
                "operationId": "streamSessionProductEvent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "example": 4,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "productId",
                        "description": "Product Id",
                        "required": true,
                        "example": 9,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "type",
                                    "payload"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "addToCart"
                                        ],
                                        "example": "addToCart"
                                    },
                                    "payload": {
                                        "type": "string",
                                        "example": {
                                            "price": 99.99,
                                            "version": "S21 Phantom Pink"
                                        },
                                        "description": "Selected option for addToCart (JSON)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/stream-session/{streamSessionid}/comment": {
            "get": {
                "tags": [
                    "Comments",
                    "Seller",
                    "Buyer"
                ],
                "summary": "List comment",
                "operationId": "commentIndex",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 4
                    },
                    {
                        "in": "query",
                        "name": "lastId",
                        "description": "Id of last message (use for alternative pagination). The filter will show all messages with IDs less than this.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "createdAtFrom",
                        "description": "Filter by Created At From, timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "createdAtTo",
                        "description": "Filter by Created At To, timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Sort ordering: use order=[-]sortOrder. It doesn't work when using lastId.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/perPage"
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-comment"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200DataProvider"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/comment"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments",
                    "Seller",
                    "Buyer"
                ],
                "summary": "Create new comment",
                "operationId": "commentCreateNew",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 4
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    },
                    {
                        "$ref": "#/components/parameters/expand-comment"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Hello!"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/comment"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/stream-session/{streamSessionid}/archive": {
            "post": {
                "tags": [
                    "Stream Session",
                    "Archives",
                    "Seller"
                ],
                "summary": "Start archiving in session",
                "operationId": "startArchiving",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 4
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stream Session",
                    "Archives",
                    "Seller"
                ],
                "summary": "Stop archiving in session",
                "operationId": "stopArchiving",
                "parameters": [
                    {
                        "in": "path",
                        "name": "streamSessionid",
                        "description": "Stream Session Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 4
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },

        "/v1/centrifugo/sign": {
            "post": {
                "summary": "Sign in centrifugo",
                "description": "This method required by centrifugo for connection check",
                "tags": [
                    "Centrifugo",
                    "Seller",
                    "Buyer"
                ],
                "operationId": "centrifugoSign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "properties": {
                                                        "token": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },

        "/v1/shop/{shopUri}": {
            "get": {
                "summary": "Get shop detail by shop uri",
                "tags": [
                    "Shop"
                ],
                "operationId": "getShopByUri",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "get shop by Uri",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],

                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/shop"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/v1/shop/{shopUri}/product": {
            "get": {
                "summary": "Get products by shop uri",
                "tags": [
                    "Shop"
                ],
                "operationId": "getProductsByShop",
                "parameters": [
                    {
                        "in": "path",
                        "name": "shopUri",
                        "description": "shop Uri",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/perPage"
                    },
                    {
                        "$ref": "#/components/parameters/fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/status200DataProvider"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/product"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Basic": {
                "description": "Use uuid as username and ANY password(empty is ok, but swagger does not support empty passwords) for Buyer role",
                "type": "http",
                "scheme": "basic"
            },
            "Bearer": {
                "description": "Access token for Seller and Admin roles",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": ""
            }
        },
        "responses": {
            "204": {
                "description": "No Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status204"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status400"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status401"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status403"
                        }
                    }
                }
            },
            "404": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status404"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status422"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status500"
                        }
                    }
                }
            },
            "503": {
                "description": "Service Unavailable",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/status503"
                        }
                    }
                }
            }
        },
        "schemas": {
            "responseModel": {
                "type": "object",
                "required": [
                    "code",
                    "status",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object"
                    }
                }
            },
            "validateError": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "example": "userId"
                    },
                    "message": {
                        "type": "string",
                        "example": "User ID must be an integer."
                    }
                }
            },
            "status200": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "200 OK",
                        "properties": {
                            "code": {
                                "example": "200"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status200DataProvider": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/status200"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_meta": {
                                "type": "object",
                                "properties": {
                                    "pagination": {
                                        "type": "object",
                                        "properties": {
                                            "totalCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "pageCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "currentPage": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "perPage": {
                                                "type": "integer",
                                                "example": 20
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "status201": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "201 Created",
                        "properties": {
                            "code": {
                                "example": "201"
                            },
                            "status": {
                                "example": "success"
                            },
                            "message": {
                                "example": "Created"
                            }
                        }
                    }
                ]
            },
            "status204": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "204 No Content",
                        "properties": {
                            "code": {
                                "example": "204"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status400": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "400 Bad Request",
                        "properties": {
                            "code": {
                                "example": "400"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Bad Request"
                            }
                        }
                    }
                ]
            },
            "status401": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "401 Unauthorized",
                        "properties": {
                            "code": {
                                "example": "401"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unauthorized"
                            }
                        }
                    }
                ]
            },
            "status403": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "403 Forbidden",
                        "properties": {
                            "code": {
                                "example": "403"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Forbidden"
                            }
                        }
                    }
                ]
            },
            "status404": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "404 Not Found",
                        "properties": {
                            "code": {
                                "example": "404"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Not Found"
                            }
                        }
                    }
                ]
            },
            "status422": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "422 Unprocessable Entity",
                        "properties": {
                            "code": {
                                "example": "422"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unprocessable Entity"
                            },
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/validateError"
                                }
                            }
                        }
                    }
                ]
            },
            "status500": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "500 Internal Server Error",
                        "properties": {
                            "code": {
                                "example": "500"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Internal Server Error"
                            }
                        }
                    }
                ]
            },
            "status503": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/responseModel"
                    },
                    {
                        "title": "503 Service Unavailable",
                        "properties": {
                            "code": {
                                "example": "503"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Service Unavailable"
                            }
                        }
                    }
                ]
            },

            "user": {
                "type": "object",
                "required": [
                    "role",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "seller",
                            "buyer"
                        ],
                        "example": "seller"
                    },
                    "name": {
                        "type": "string",
                        "example": "Jon Snow"
                    },
                    "shop": {
                        "type": "object",
                        "description": "EXPAND",
                        "$ref": "#/components/schemas/shop"
                    }
                }
            },
            "token": {
                "type": "object",
                "required": [
                    "token",
                    "expiredAt"
                ],
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "config": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "object",
                        "properties": {
                            "major": {
                                "type": "integer"
                            },
                            "minor": {
                                "type": "integer"
                            },
                            "patch": {
                                "type": "integer"
                            },
                            "commit": {
                                "type": "string"
                            }
                        }
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {}
                    },
                    "errors": {
                        "type": "object",
                        "properties": {}
                    }
                }
            },
            "changePassword": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "recoveryPasswordRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email"
                    }
                }
            },
            "recoveryPassword": {
                "type": "object",
                "properties": {
                    "resetToken": {
                        "type": "string",
                        "description": "Password reset token"
                    },
                    "password": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    }
                }
            },

            "shop": {
                "type": "object",
                "required": [
                    "uri",
                    "name",
                    "website",
                    "logo"
                ],
                "properties": {
                    "uri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string"
                    }
                }
            },

            "streamSession": {
                "type": "object",
                "required": [
                    "id",
                    "shopUri",
                    "sessionId",
                    "status",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Some Stream Name"
                    },
                    "cover": {
                        "type": "object",
                        "$ref": "#/components/schemas/streamSessionCover"
                    },
                    "shopUri": {
                        "type": "string",
                        "example": "shop1"
                    },
                    "sessionId": {
                        "type": "string",
                        "example": "1_MX40NTc0ODE1Mn5-MTQ4NjEzNjg3NTg4OX5BVVBhZmZCK3E5ZTdzdmlZbVpvR041V32-QX4"
                    },
                    "status": {
                        "type": "integer",
                        "description": "1-NEW; 2-ACTIVE; 3-STOPPED",
                        "enum": [1, 2, 3],
                        "example": 1
                    },
                    "commentsEnabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "type": "integer",
                        "example": 1611738385
                    },
                    "announcedAt": {
                        "type": "integer",
                        "example": 1611738485
                    },
                    "duration": {
                        "type": "integer",
                        "example": 10800
                    },
                    "startedAt": {
                        "type": "integer",
                        "example": 1611741985
                    },
                    "stoppedAt": {
                        "type": "integer",
                        "example": 1611752785
                    },
                    "rotate": {
                        "type": "integer",
                        "example": 90
                    }
                }
            },
            "streamSessionToken": {
                "type": "object",
                "required": [
                    "streamSessionId",
                    "token",
                    "expiredAt"
                ],
                "properties": {
                    "streamSessionId": {
                        "type": "integer",
                        "example": 1
                    },
                    "token": {
                        "type": "string",
                        "description": "EXPAND",
                        "example": "T1==cGFydG5lcl9pZD00NTc0ODE1MiZzaWc9NDI2NTY1NmNiZmM4MjBmMTY2ZDQ0OWY4MDcwOTQwYTcwN2Q1MmJiMjpzZXNzaW9uX2lkPTFfTVg0ME5UYzBPREUxTW41LU1UUTROakV6TmpnM05UZzRPWDVCVlZCaFptWkNLM0U1WlRkemRtbFpiVnB2UjA0MVYzWi1RWDQmY3JlYXRlX3RpbWU9MTQ4NjEzNjg2NSZyb2xlPXB1Ymxpc2hlciZub25jZT0xNDg2MTM2ODY1LjE5ODI2MDkxMTcyNDUmZXhwaXJlX3RpbWU9MTQ4NjIyMzI2NQ=="
                    },
                    "expiredAt": {
                        "type": "integer",
                        "example": 1619827200
                    }
                }
            },
            "streamSessionProduct": {
                "type": "object",
                "required": [
                    "productId",
                    "status"
                ],
                "properties": {
                    "productId": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "2-`Displayed in the widget`; 3-`Presented now`",
                        "type": "integer",
                        "example": 2
                    },
                    "product": {
                        "type": "object",
                        "description": "Available via `expand`",
                        "$ref": "#/components/schemas/product"
                    }
                }
            },
            "streamSessionSnapshot": {
                "type": "object",
                "required": [
                    "timestamp",
                    "products"
                ],
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "example": 0
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/streamSessionProduct"
                        }
                    }
                }
            },
            "streamSessionCover": {
                "type": "object",
                "required": [
                    "productId",
                    "status"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "image",
                            "video"
                        ]
                    }
                }
            },

            "comment": {
                "type": "object",
                "required": [
                    "id",
                    "userId",
                    "message",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "object",
                        "description": "Available via `expand`",
                        "$ref": "#/components/schemas/user"
                    }
                }
            },

            "product": {
                "type": "object",
                "required": [
                    "id",
                    "externalID",
                    "title",
                    "photo",
                    "link",
                    "options"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "externalID": {
                        "type": "string",
                        "example": "2136541"
                    },
                    "title": {
                        "type": "string",
                        "example": "In quas molestiae."
                    },
                    "photo": {
                        "type": "string",
                        "example": "https://picsum.photos/200"
                    },
                    "link": {
                        "type": "string",
                        "example": "http://bernier.org/"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/productOption"
                        }
                    }
                }
            },
            "productOption": {
                "type": "object",
                "description": "Only price is required field. Other fields are dynamic",
                "required": [
                    "price"
                ],
                "properties": {
                    "sku": {
                        "type": "string",
                        "example": "fb7e2008-50e4-3735-a320-ccc3399d7da5"
                    },
                    "price": {
                        "type": "number",
                        "example": 178.13
                    },
                    "size": {
                        "type": "string",
                        "example": "M"
                    },
                    "color": {
                        "type": "string",
                        "example": "MediumOrchid"
                    }
                }
            }
        },
        "parameters": {
            "page": {
                "in": "query",
                "name": "page",
                "description": "The number of page.",
                "required": false,
                "example": 1,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                }
            },
            "perPage": {
                "in": "query",
                "name": "perPage",
                "description": "The number of items returned per page",
                "required": false,
                "example": 20,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 20
                }
            },
            "fields": {
                "in": "query",
                "name": "fields",
                "description": "Fields (coma separated)",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-streamSession": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```-``` (for future use)",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-streamSessionProduct": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```product```",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-comment": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```user```",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "expand-user": {
                "in": "query",
                "name": "expand",
                "description": "Extra Fields (coma separated). Available values: ```shop```",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}