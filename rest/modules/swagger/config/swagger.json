{
    "swagger": "2.0",
    "info": {
        "description": "API for mobile && js applications.",
        "version": "1.0.0",
        "title": "GBKSOFT Test API"
    },
    "basePath": "/rest",
    "schemes": ["http", "https"],
    "paths": {
        "/v1/user/login/twitter": {
            "post": {
                "summary": "Create access token for APP using twitter account",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessTokenUsingTwitterAccount",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "token",
                        "description": "Access token",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "tokenSecret",
                        "description": "Access token secret",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/login/{type}": {
            "post": {
                "summary": "Create access token for APP using social account",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessTokenUsingSocialAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "type": "string",
                        "enum": [
                            "facebook",
                            "linkedin",
                            "google"
                        ],
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "token",
                        "type": "string",
                        "required": true,
                        "description": "Get code facebook example: https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={redirect_uri}&scope={scope}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "summary": "Create access token for APP",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreateAccessToken",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Username / e-mail<br>Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/register": {
            "post": {
                "summary": "Create user for APP",
                "tags": ["AnyBody"],
                "produces": ["application/json"],
                "operationId": "userCreate",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "required": true,
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    {
                        "in": "formData",
                        "name": "is_remember_me",
                        "type": "string",
                        "enum": [ "yes", "no"],
                        "default": "no",
                        "required": false,
                        "description": "are you need remember this token?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/current": {
            "get": {
                "summary": "Current user for APP",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userCurrent",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/status401"
                        }
                    }
                }
            }
        },
        "/v1/user/recovery-password": {
            "post": {
                "summary": "Recovery user password by email",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userRecoveryPasswordByEmail",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recoveryPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        },
        "/v1/user/new-password": {
            "post": {
                "summary": "Recovery user password by email",
                "tags": ["User"],
                "produces": ["application/json"],
                "operationId": "userRecoveryPasswordChange",
                "parameters": [
                    {
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recoveryPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/status200"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/status422"
                        }
                    }
                }
            }
        }
    },
    "definitions": {

        "responseModel": {
            "type": "object",
            "required": [
                "code",
                "status",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "object"
                }
            }
        },
        "validateError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "user_id"
                },
                "message": {
                    "type": "string",
                    "example": "User ID must be an integer."
                }
            }
        },
        "status200": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "200 OK",
                    "properties": {
                        "code": {
                            "example": "200"
                        },
                        "status": {
                            "example": "success"
                        }
                    }
                }
            ]
        },
        "status201": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "201 Created",
                    "properties": {
                        "code": {
                            "example": "201"
                        },
                        "status": {
                            "example": "success"
                        },
                        "message": {
                            "example": "Created"
                        }
                    }
                }
            ]
        },
        "status400": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "400 Bad Request",
                    "properties": {
                        "code": {
                            "example": "400"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Bad Request"
                        }
                    }
                }
            ]
        },
        "status401": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "401 Unauthorized",
                    "properties": {
                        "code": {
                            "example": "401"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Unauthorized"
                        }
                    }
                }
            ]
        },
        "status404": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "401 Not Found",
                    "properties": {
                        "code": {
                            "example": "404"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Not Found"
                        }
                    }
                }
            ]
        },
        "status422": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "422 Unprocessable Entity",
                    "properties": {
                        "code": {
                            "example": "422"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Unprocessable Entity"
                        },
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validateError"
                            }
                        }
                    }
                }
            ]
        },
        "status500": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "500 Internal Server Error",
                    "properties": {
                        "code": {
                            "example": "500"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Internal Server Error"
                        }
                    }
                }
            ]
        },
        "status503": {
            "allOf": [
                {
                    "$ref": "#/definitions/responseModel"
                },
                {
                    "title": "503 Service Unavailable",
                    "properties": {
                        "code": {
                            "example": "503"
                        },
                        "status": {
                            "example": "error"
                        },
                        "message": {
                            "example": "Service Unavailable"
                        }
                    }
                }
            ]
        },

        "user": {
            "type": "object",
            "required": [
                "username",
                "email",
                "accessToken"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "accessToken": {
                    "$ref": "#/definitions/token"
                }
            }
        },
        "token": {
            "type": "object",
            "required": [
                "token",
                "expired_at"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "recoveryPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "required": true,
                    "description": "Email"
                }
            }
        },
        "recoveryPassword": {
            "type": "object",
            "properties": {
                "resetToken": {
                    "type": "string",
                    "required": true,
                    "description": "Password reset token"
                },
                "password": {
                    "type": "string",
                    "required": true,
                    "description": "Minimum 2, maximum 255 characters"
                },
                "confirmPassword": {
                    "type": "string",
                    "required": true,
                    "description": "Minimum 2, maximum 255 characters"
                }
            }
        }
    }
}
