{
    "openapi": "3.0.0",
    "info": {
        "description": "API for mobile && js applications.",
        "version": "1.0.0",
        "title": "GBKSOFT Test API"
    },
    "security": [
        {
            "Bearer": []
        }
    ],
    "paths": {
        "/v1/user/login": {
            "post": {
                "security": [],
                "summary": "Create access token for APP",
                "tags": [
                    "AnyBody"
                ],
                "operationId": "userCreateAccessToken",
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status201"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/token"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status422"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "E-mail Minimum 2, maximum 255 characters"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Minimum 2, maximum 255 characters"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register": {
            "post": {
                "security": [],
                "summary": "Create user for APP",
                "tags": [
                    "AnyBody"
                ],
                "operationId": "userCreate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/token"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status422"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "Minimum 2, maximum 255 characters"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Minimum 2, maximum 255 characters"
                                    },
                                    "isRememberMe": {
                                        "enum": [
                                            "no",
                                            "yes"
                                        ],
                                        "default": "no",
                                        "description": "are you need remember this token?"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/current": {
            "get": {
                "summary": "Current user for APP",
                "tags": [
                    "User"
                ],
                "operationId": "userCurrent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status401"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/logout": {
            "post": {
                "summary": "Logout current user",
                "tags": [
                    "User"
                ],
                "operationId": "userLogout",
                "responses": {
                    "204": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status204"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status401"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/config": {
            "get": {
                "security": [],
                "summary": "Rest application config",
                "tags": [
                    "AnyBody"
                ],
                "operationId": "configIndex",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status200"
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "$ref": "#/components/schemas/config"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/change-password": {
            "patch": {
                "summary": "Change User Password",
                "tags": [
                    "User"
                ],
                "operationId": "userChangePassword",
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status401"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status422"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePassword"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/recovery-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "User"
                ],
                "operationId": "userRecoveryPasswordByEmail",
                "responses": {
                    "204": {
                        "description": "No Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status422"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPasswordRequest"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/new-password": {
            "post": {
                "security": [],
                "summary": "Recovery user password by email",
                "tags": [
                    "User"
                ],
                "operationId": "userRecoveryPasswordChange",
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/responses/status204"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/status422"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/recoveryPassword"
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "/rest"
        }
    ],
    "components": {
        "securitySchemes": {
            "Bearer": {
                "description": "",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": ""
            }
        },
        "responses": {
            "responseModel": {
                "type": "object",
                "required": [
                    "code",
                    "status",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object"
                    }
                }
            },
            "validateError": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "example": "userId"
                    },
                    "message": {
                        "type": "string",
                        "example": "User ID must be an integer."
                    }
                }
            },
            "status200": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "200 OK",
                        "properties": {
                            "code": {
                                "example": "200"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status200DataProvider": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/status200"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_meta": {
                                "type": "object",
                                "properties": {
                                    "pagination": {
                                        "type": "object",
                                        "properties": {
                                            "totalCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "pageCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "currentPage": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "perPage": {
                                                "type": "integer",
                                                "example": 20
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "status201": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "201 Created",
                        "properties": {
                            "code": {
                                "example": "201"
                            },
                            "status": {
                                "example": "success"
                            },
                            "message": {
                                "example": "Created"
                            }
                        }
                    }
                ]
            },
            "status204": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "204 No Content",
                        "properties": {
                            "code": {
                                "example": "204"
                            },
                            "status": {
                                "example": "success"
                            }
                        }
                    }
                ]
            },
            "status400": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "400 Bad Request",
                        "properties": {
                            "code": {
                                "example": "400"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Bad Request"
                            }
                        }
                    }
                ]
            },
            "status401": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "401 Unauthorized",
                        "properties": {
                            "code": {
                                "example": "401"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unauthorized"
                            }
                        }
                    }
                ]
            },
            "status403": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "403 Forbidden",
                        "properties": {
                            "code": {
                                "example": "403"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Forbidden"
                            }
                        }
                    }
                ]
            },
            "status404": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "401 Not Found",
                        "properties": {
                            "code": {
                                "example": "404"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Not Found"
                            }
                        }
                    }
                ]
            },
            "status422": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "422 Unprocessable Entity",
                        "properties": {
                            "code": {
                                "example": "422"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Unprocessable Entity"
                            },
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/responses/validateError"
                                }
                            }
                        }
                    }
                ]
            },
            "status500": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "500 Internal Server Error",
                        "properties": {
                            "code": {
                                "example": "500"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Internal Server Error"
                            }
                        }
                    }
                ]
            },
            "status503": {
                "allOf": [
                    {
                        "$ref": "#/components/responses/responseModel"
                    },
                    {
                        "title": "503 Service Unavailable",
                        "properties": {
                            "code": {
                                "example": "503"
                            },
                            "status": {
                                "example": "error"
                            },
                            "message": {
                                "example": "Service Unavailable"
                            }
                        }
                    }
                ]
            }
        },
        "schemas": {
            "user": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "token": {
                "type": "object",
                "required": [
                    "token",
                    "expiredAt"
                ],
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "config": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "object",
                        "properties": {
                            "major": {
                                "type": "integer"
                            },
                            "minor": {
                                "type": "integer"
                            },
                            "patch": {
                                "type": "integer"
                            },
                            "commit": {
                                "type": "string"
                            }
                        }
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {}
                    },
                    "errors": {
                        "type": "object",
                        "properties": {}
                    }
                }
            },
            "changePassword": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "recoveryPasswordRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email"
                    }
                }
            },
            "recoveryPassword": {
                "type": "object",
                "properties": {
                    "resetToken": {
                        "type": "string",
                        "description": "Password reset token"
                    },
                    "password": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "description": "Minimum 2, maximum 255 characters"
                    }
                }
            }
        }
    }
}