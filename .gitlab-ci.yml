variables:
  MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  MYSQL_ROOT_HOST: "%"
  MYSQL_DATABASE: ${DB_NAME}
  MYSQL_USER: ${DB_USERNAME}
  MYSQL_PASSWORD: ${DB_PASSWORD}
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_NAME: ${DB_NAME}
  DB_PORT: ${DB_PORT}
  DB_HOST: "mysql"

before_script:
  - rm -fr /var/www/html

stages:
  - build
  - tests
  - artifacts
  - dev
  - test
  - live

build_vendor:
  stage: build
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    untracked: true
    paths:
      - vendor/
#      - /design/node_modules/
#      - design/dist/
    when: on_success
    expire_in: 2h
  cache:
    key: vendors-lib
    paths:
      - vendor/
#        - /design/node_modules/
  script:
    - echo "===== Install dependencies ====="
    - chmod +x ./composer-install.sh && ./composer-install.sh
  when: always
  only:
    - web
  tags:
    - shared-cli

phpmd:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    untracked: true
    paths:
      - dev/build/
    when: on_failure
    expire_in: 2h
  script:
    - echo "===== Run tests ====="
    - vendor/bin/dep tests:php_md
  when: always
  only:
    - web
  dependencies:
    - build_vendor
  tags:
    - shared-cli

phpcpd:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    untracked: true
    paths:
      - dev/build/
    when: on_failure
    expire_in: 2h
  script:
    - echo "===== Run tests ====="
    - vendor/bin/dep tests:php_cpd
  when: always
  only:
    - web
  dependencies:
    - build_vendor
  tags:
    - shared-cli

phpcs:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    untracked: true
    paths:
      - dev/build/
    when: on_failure
    expire_in: 2h
  script:
    - echo "===== Run tests ====="
    - vendor/bin/dep tests:php_cs
  when: always
  only:
    - web
  dependencies:
    - build_vendor
  tags:
    - shared-cli

artifacts:
  stage: artifacts
  artifacts:
    untracked: true
    paths:
    - dev/build/
    expire_in: 1 week
  only:
    - web
  script:
    - echo "===== Collect artifacts data ====="
    - rm -rf vendor
  when: always
  dependencies:
    - phpmd
    - phpcpd
    - phpcs
  tags:
    - shared-cli

dev:review:
  stage: dev
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: dev-${MAIN_DOMAIN}
    YII_MAIN_DOMAIN: dev-${MAIN_DOMAIN}
    YII_REST_DOMAIN: dev-${MAIN_DOMAIN}
    YII_BACKEND_DOMAIN: dev-${MAIN_DOMAIN}
    BUILD_URL: https://dev-$MAIN_DOMAIN
    YII_BUILD_ENV: Dev
  script:
    - echo "===== All services ====="
    - cat /etc/hosts | grep '10.1.' | awk '{print $1" "$2;}'
    - ./vendor/bin/dep gitlab:deploy
    - apache2-foreground
  except:
    - master
  environment:
    name: dev-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  dependencies:
    - build_vendor
  tags:
    - shared-web

dev:swagger:
  stage: dev
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/swagger:3
  variables:
    PROXY_build_HTTPS: "443:8080"
    PROXY_build_DOMAIN: dev-swagger-ui-${MAIN_DOMAIN}
    BUILD_URL: https://dev-swagger-ui-${MAIN_DOMAIN}
    API_URL: "https://dev-$MAIN_DOMAIN/rest/swagger/main/json"
  script:
    - echo "===== Run Swagger UI ====="
    - echo "Swagger UI URL ${BUILD_URL}"
    - echo "JSON URL ${API_URL}"
    - sh /usr/share/nginx/docker-run.sh
  except:
    - master
  environment:
    name: dev-swagger-ui/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  tags:
  - shared-web

test:review:
  stage: test
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: test-${MAIN_DOMAIN}
    YII_MAIN_DOMAIN: test-${MAIN_DOMAIN}
    YII_REST_DOMAIN: test-${MAIN_DOMAIN}
    YII_BACKEND_DOMAIN: test-${MAIN_DOMAIN}
    BUILD_URL: https://test-$MAIN_DOMAIN
    YII_BUILD_ENV: Test
  script:
    - echo "===== All services ====="
    - cat /etc/hosts | grep '10.1.' | awk '{print $1" "$2;}'
    - ./vendor/bin/dep gitlab:deploy
    - apache2-foreground
  except:
    - master
  environment:
    name: test-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  dependencies:
    - build_vendor
  tags:
    - shared-web

test:swagger:
  stage: test
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/swagger:3
  variables:
    PROXY_build_HTTPS: "443:8080"
    PROXY_build_DOMAIN: test-swagger-ui-${MAIN_DOMAIN}
    BUILD_URL: https://test-swagger-ui-${MAIN_DOMAIN}
    API_URL: "https://test-$MAIN_DOMAIN/rest/swagger/main/json"
  script:
  - echo "===== Run Swagger UI ====="
  - echo "Swagger UI URL ${BUILD_URL}"
  - echo "JSON URL ${API_URL}"
  - sh /usr/share/nginx/docker-run.sh
  except:
    - master
  environment:
    name: test-swagger-ui/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  tags:
  - shared-web

live:review:
  stage: live
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: live-${MAIN_DOMAIN}
    YII_MAIN_DOMAIN: live-${MAIN_DOMAIN}
    YII_REST_DOMAIN: live-${MAIN_DOMAIN}
    YII_BACKEND_DOMAIN: live-${MAIN_DOMAIN}
    BUILD_URL: https://live-$MAIN_DOMAIN
    YII_BUILD_ENV: Live
  script:
    - echo "===== All services ====="
    - cat /etc/hosts | grep '10.1.' | awk '{print $1" "$2;}'
    - composer install --no-interaction --optimize-autoloader --no-progress --no-dev
    - ./vendor/bin/dep gitlab:deploy
    - apache2-foreground
  only:
    - master
  environment:
    name: live-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  dependencies:
    - phpmd
    - phpcpd
    - phpcs
  tags:
    - shared-web
