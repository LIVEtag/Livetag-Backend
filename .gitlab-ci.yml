variables:
  MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  MYSQL_ROOT_HOST: "%"
  MYSQL_DATABASE: ${DB_NAME}
  MYSQL_USER: ${DB_USERNAME}
  MYSQL_PASSWORD: ${DB_PASSWORD}
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_NAME: ${DB_NAME}
  DB_PORT: ${DB_PORT}
  DB_HOST: "mysql"

.build_template: &build_project
  script:
    - echo "===== Move files ====="
    - rm -fr /var/www/html
    - ln -s ${CI_PROJECT_DIR} /var/www/html
    - cd /var/www/html
    - git log --pretty=format:'%h %an(%ae) - %B' --abbrev-commit --date=short -1 > ./version.txt
    - composer install --no-progress
    - php init --env=$YII_BUILD_ENV --overwrite=All
    - ./yii migrate --interactive=0
    - echo "===== Cron setup ====="
    - cat ./.cron > /var/spool/cron/crontabs/www-data
    - echo >> /var/spool/cron/crontabs/www-data
    - chown www-data:crontab /var/spool/cron/crontabs/www-data
    - chmod 600 /var/spool/cron/crontabs/www-data
    - cron
#    - echo "===== Design build =====" # !!!! If needed
#    - cd design && npm i && npm run build
    - echo "===== Final ownership fix ====="
    - chown -R www-data:www-data /var/www/html/*
    - echo "===== Run Apache ====="
    - echo "===== Link -> $BUILD_URL ====="
    - apache2-foreground

stages:
  - build
  - tests
  - collect_artifacts
  - run

build_vendor:
  stage: build
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  cache:
    key: tests
    untracked: true
    paths:
      - vendor/
      - node_modules/
    policy: pull
  script:
    - echo "===== Install dependencies ====="
    - composer install --no-progress
  when: always
  tags:
    - shared1

phpmd:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    paths:
      - dev/build/
    when: on_failure
    expire_in: 1 week
  cache:
    key: tests
    untracked: true
    paths:
      - vendor/
    policy: pull
  script:
    - echo "===== Install dependencies ====="
    - composer install --no-progress
    - php vendor/bin/phpmd ${CI_PROJECT_DIR}/common,${CI_PROJECT_DIR}/console,${CI_PROJECT_DIR}/rest,${CI_PROJECT_DIR}/backend,${CI_PROJECT_DIR}/frontend xml ${CI_PROJECT_DIR}/dev/etc/phpmd/rules/rules.xml --reportfile ${CI_PROJECT_DIR}/dev/build/phpmd.xml --suffixes php --exclude backend/web,frontend/web,rest/web,/views/,/gii/generators/,/migrations/
  when: always
  tags:
    - shared1

phpcpd:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    paths:
      - dev/build/
    when: on_failure
    expire_in: 1 week
  cache:
    key: tests
    untracked: true
    paths:
      - vendor/
    policy: pull
  script:
    - echo "===== Install dependencies ====="
    - composer install --no-progress
    - php vendor/bin/phpcpd ${CI_PROJECT_DIR}/common ${CI_PROJECT_DIR}/console ${CI_PROJECT_DIR}/rest ${CI_PROJECT_DIR}/backend ${CI_PROJECT_DIR}/frontend --log-pmd ${CI_PROJECT_DIR}/dev/build/phpcpd.xml --min-lines 50
  when: always
  tags:
    - shared2

phpcs:
  stage: tests
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  artifacts:
    paths:
      - dev/build/
    when: on_failure
    expire_in: 1 week
  cache:
    key: tests
    untracked: true
    paths:
      - vendor/
    policy: pull
  script:
    - echo "===== Install dependencies ====="
    - composer install --no-progress
    - php vendor/bin/phpcs --standard=${CI_PROJECT_DIR}/etc/phpcs/standard/ruleset.xml --report=checkstyle --report-file=${CI_PROJECT_DIR}/dev/build/phpcs.xml --extensions=php ${CI_PROJECT_DIR}/common ${CI_PROJECT_DIR}/console ${CI_PROJECT_DIR}/rest ${CI_PROJECT_DIR}/backend ${CI_PROJECT_DIR}/frontend
  when: always
  tags:
    - shared3

artifacts:
  stage: collect_artifacts
  artifacts:
    untracked: true
    paths:
    - dev/build/
  script:
    - echo "===== Collect artifacts data ====="
  when: always
  dependencies:
    - phpmd
    - phpcpd
    - phpcs
  tags:
    - shared1

run:dev-review:
  stage: run
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: dev-${MAIN_DOMAIN}
    MAIN_DOMAIN: dev-${MAIN_DOMAIN}
    REST_DOMAIN: dev-${MAIN_DOMAIN}
    BACKEND_DOMAIN: dev-${MAIN_DOMAIN}
    BUILD_URL: https://dev-$MAIN_DOMAIN
    YII_BUILD_ENV: Dev
  cache:
    untracked: true
    paths:
      - vendor/
      - node_modules/
  <<: *build_project
  only:
    - master
  environment:
    name: dev-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  tags:
    - docker-dev

run:test-review:
  stage: run
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: test-${MAIN_DOMAIN}
    MAIN_DOMAIN: test-${MAIN_DOMAIN}
    REST_DOMAIN: test-${MAIN_DOMAIN}
    BACKEND_DOMAIN: test-${MAIN_DOMAIN}
    BUILD_URL: https://test-$MAIN_DOMAIN
    YII_BUILD_ENV: Test
  cache:
    untracked: true
    paths:
      - vendor/
      - node_modules/
  <<: *build_project
  only:
    - master
  environment:
    name: test-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  tags:
    - docker-test

run:live-review:
  stage: run
  when: manual
  image:
    name: hub.ci.gbksoft.net:5000/pub/php-apache:7.1
    entrypoint: [""]
  services:
    - name: mysql:5.7
      alias: mysql
      command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
  variables:
    PROXY_build_DOMAIN: live-${MAIN_DOMAIN}
    MAIN_DOMAIN: live-${MAIN_DOMAIN}
    REST_DOMAIN: live-${MAIN_DOMAIN}
    BACKEND_DOMAIN: live-${MAIN_DOMAIN}
    BUILD_URL: https://live-$MAIN_DOMAIN
    YII_BUILD_ENV: Live
  cache:
    untracked: true
    paths:
      - vendor/
      - node_modules/
  <<: *build_project
  only:
    - master
  environment:
    name: live-review/$CI_PROJECT_PATH_SLUG
    url: $BUILD_URL
  tags:
    - docker-live
